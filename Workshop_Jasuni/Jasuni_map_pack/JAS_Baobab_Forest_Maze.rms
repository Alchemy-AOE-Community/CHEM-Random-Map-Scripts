/* 
notes on the map:

stress test showed that players may start with TCs ranging each other. Presumably this is unlikely when the number of players matches the map size.

Also, groups of objects will spawn 
*/

<PLAYER_SETUP>
random_placement
behavior_version 2

start_random
    percent_chance 15 #const HUT 1082
    percent_chance 15 #const HUT 1083
    percent_chance 14 #const HUT 1084
    percent_chance 14 #const HUT 1085
    percent_chance 14 #const HUT 1086
    percent_chance 14 #const HUT 1087
    percent_chance 14 #const HUT 1088
end_random
if MAPSIZE_MINI
    /* AT_MOST_MINI can simply use MAPSIZE_MINI */
    #define AT_MOST_TINY
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
    /* and AT_MOST_LUDCROUS is always true */
elseif MAPSIZE_TINY
    #define AT_LEAST_TINY
    
    #define AT_MOST_TINY
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_SMALL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MEDIUM
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_NORMAL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_LARGE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_HUGE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_GIANT
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MASSIVE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_ENORMOUS
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_COLOSSAL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_INCREDIBLE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MONSTROUS
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    #define AT_LEAST_MONSTROUS
    
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_LUDICROUS
    /* AT_LEAST_MINI is always true */
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    #define AT_LEAST_MONSTROUS
    /* and AT_LEAST_LUDCROUS - can simply use MAP_SIZE_LUDICROUS */
endif

#const ON_GRID 278 /* dead fish trap */
effect_amount GAIA_SET_ATTRIBUTE ON_GRID ATTR_STORAGE_VALUE 0

<LAND_GENERATION>
base_terrain DLC_BAOBABFOREST

create_player_lands {
    terrain_type DLC_BAOBABFOREST
    land_percent 0
    circle_radius 40 0
}
<OBJECTS_GENERATION>
create_object TOWN_CENTER {
    set_place_for_every_player
    find_closest
    actor_area 1
    actor_area_radius 0
    min_distance_to_map_edge 10
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 4
    actor_area_radius 4
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 6
    actor_area_radius 6
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 9
    actor_area_radius 9
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 13
    actor_area_radius 13
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 16
    actor_area_radius 16
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 20
    actor_area_radius 20
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 24
    actor_area_radius 24
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 30
    actor_area_radius 30
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 40
    actor_area_radius 40
}
create_object ON_GRID {
    resource_delta -60
    set_place_for_every_player
    actor_area_to_place_in 1
    actor_area 44
    actor_area_radius 44
}
create_object VILLAGER {
    actor_area_to_place_in 6
    avoid_actor_area 4
    set_place_for_every_player
    avoid_forest_zone
}
if REGICIDE
    create_object KING {
        avoid_actor_area 6
        actor_area_to_place_in 9
        set_place_for_every_player
        avoid_forest_zone
    }
endif
create_object SCOUT {
    avoid_actor_area 6
    actor_area_to_place_in 9
    set_place_for_every_player
    avoid_forest_zone
}
create_object HUT { /* because placing buildings may be a bit tricky, I'm adding a hut to ease the start */
    actor_area_to_place_in 16
    avoid_actor_area 13
    set_place_for_every_player
    min_distance_group_placement 2
}
create_object FORAGE {
    actor_area_to_place_in 16
    avoid_actor_area 9
    number_of_groups 2
    number_of_objects 5
    min_distance_group_placement 2
    temp_min_distance_group_placement 12
    set_place_for_every_player
    set_gaia_object_only
    set_tight_grouping
    avoid_forest_zone /* guarantees at least 1 bush will not be touching forest, which makes it much harder/impossible for the resource to be trapped */
}
/* primary stone/gold */
create_object STONE {
    actor_area 100
    actor_area_radius 6
    avoid_actor_area 100
    actor_area_to_place_in 16
    avoid_actor_area 9
    number_of_objects 5
    min_distance_group_placement 2
    temp_min_distance_group_placement 12
    set_place_for_every_player
    set_gaia_object_only
    set_tight_grouping
    avoid_forest_zone /* guarantees at least 1 bush will not be touching forest, which makes it much harder/impossible for the resource to be trapped */
}
create_object GOLD {
    actor_area 100
    actor_area_radius 6
    avoid_actor_area 100
    actor_area_to_place_in 16
    avoid_actor_area 9
    number_of_objects 7
    min_distance_group_placement 2
    set_place_for_every_player
    set_gaia_object_only
    set_tight_grouping
    avoid_forest_zone /* guarantees at least 1 bush will not be touching forest, which makes it much harder/impossible for the resource to be trapped */
}
/* secondary gold/stone */
create_object GOLD {
    actor_area 100
    actor_area_radius 6
    avoid_actor_area 100
    actor_area_to_place_in 24
    avoid_actor_area 16
    number_of_objects 4
    number_of_groups 2
    temp_min_distance_group_placement 12
    min_distance_group_placement 2
    set_place_for_every_player
    set_gaia_object_only
    set_tight_grouping
    avoid_forest_zone /* guarantees at least 1 bush will not be touching forest, which makes it much harder/impossible for the resource to be trapped */
}
create_object STONE {
    actor_area 100
    actor_area_radius 6
    avoid_actor_area 100
    actor_area_to_place_in 24
    avoid_actor_area 16
    number_of_objects 4
    min_distance_group_placement 2
    set_place_for_every_player
    set_gaia_object_only
    set_tight_grouping
    avoid_forest_zone /* guarantees at least 1 bush will not be touching forest, which makes it much harder/impossible for the resource to be trapped */
}
/* player sheep TODO determine what herdable to use */
create_object SHEEP {
    set_place_for_every_player
    number_of_objects 4
    set_gaia_object_only
    avoid_actor_area 6
    actor_area_to_place_in 9
    avoid_forest_zone
    set_loose_grouping
}
create_object SHEEP {
    set_place_for_every_player
    number_of_objects 2
    number_of_groups 2
    set_gaia_object_only
    avoid_actor_area 13
    actor_area_to_place_in 20
    temp_min_distance_group_placement 8
    avoid_forest_zone
    set_loose_grouping
}
/* or DLC_RHINO */
create_object DLC_ELEPHANT {
    set_place_for_every_player
    number_of_objects 2
    set_gaia_object_only
    avoid_actor_area 16
    actor_area_to_place_in 24
    temp_min_distance_group_placement 8
    min_distance_group_placement 2
    avoid_forest_zone
}
create_object DLC_OSTRICH {
    set_place_for_every_player
    number_of_groups 2
    number_of_objects 3
    set_gaia_object_only
    avoid_actor_area 16
    actor_area_to_place_in 24
    temp_min_distance_group_placement 8
    min_distance_group_placement 2
    avoid_forest_zone
}
/* actor areas included so far: 4,6,9,13,16,20,24
standard resources: 5/5/5/7/8/inf relics - try to scale to all map sizes: perhaps 4 for miniature map size?

    if MAPSIZE_MINI
    elseif MAPSIZE_TINY
    elseif MAPSIZE_SMALL
    elseif MAPSIZE_MEDIUM
    elseif MAPSIZE_NORMAL
    elseif MAPSIZE_LARGE
    elseif MAPSIZE_HUGE
    elseif MAPSIZE_GIANT
    elseif MAPSIZE_MASSIVE
    elseif MAPSIZE_ENORMOUS
    elseif MAPSIZE_COLOSSAL
    elseif MAPSIZE_INCREDIBLE
    elseif MAPSIZE_MONSTROUS
    elseif MAPSIZE_LUDICROUS
    endif

add neutral resources
    relic distribution appears to be at an acceptable level for various map sizes, though I did not do super rigorous testing. ludicrous maps appear to end up with around 21 relics (though it does vary some). huge size and larger is limited primarily by the temp min distance group placement, though number of objects may provide a hard cap.
 */

if AT_LEAST_LARGE
    create_object FORAGE {
        set_gaia_object_only
        avoid_actor_area 40
        number_of_objects 4
        number_of_groups 99
        temp_min_distance_group_placement 70
        min_distance_group_placement 2
        set_tight_grouping
        /* no avoid_forest_zone - I don't particularly care if these get trapped or if a few of them spawn with less bushes. */
    }
endif
create_object RELIC {
    temp_min_distance_group_placement 40
    if MAPSIZE_MINI
        number_of_objects 4
        temp_min_distance_group_placement 30
    elseif MAPSIZE_TINY
        number_of_objects 5
        temp_min_distance_group_placement 36
    elseif MAPSIZE_SMALL
        number_of_objects 5
    elseif MAPSIZE_MEDIUM
        number_of_objects 5
    elseif MAPSIZE_NORMAL
        number_of_objects 7
    elseif MAPSIZE_LARGE
        number_of_objects 8
    elseif MAPSIZE_HUGE
        number_of_objects 20
        temp_min_distance_group_placement 60
    elseif MAPSIZE_GIANT
        number_of_objects 20
        temp_min_distance_group_placement 64
    elseif MAPSIZE_MASSIVE
        number_of_objects 20
        temp_min_distance_group_placement 65
    elseif MAPSIZE_ENORMOUS
        number_of_objects 20
        temp_min_distance_group_placement 68
    elseif MAPSIZE_COLOSSAL
        number_of_objects 20
        temp_min_distance_group_placement 70
    elseif MAPSIZE_INCREDIBLE
        number_of_objects 25
        temp_min_distance_group_placement 75
    elseif MAPSIZE_MONSTROUS
        number_of_objects 25
        temp_min_distance_group_placement 80
    elseif MAPSIZE_LUDICROUS
        number_of_objects 30
        temp_min_distance_group_placement 90
    endif
    set_gaia_object_only
    avoid_actor_area 30
}
create_object GOLD {
    temp_min_distance_group_placement 40
    min_distance_group_placement 10
    if AT_MOST_TINY
        avoid_actor_area 30
    else
        avoid_actor_area 44
    endif
    set_tight_grouping
    avoid_forest_zone
    actor_area 100
    actor_area_radius 16
    avoid_actor_area 100
    if AT_MOST_NORMAL
        number_of_objects 3
    else
        number_of_objects 4
    endif
    if MAPSIZE_MINI
        number_of_groups 2
        temp_min_distance_group_placement 30
    elseif MAPSIZE_TINY
        number_of_groups 2
        temp_min_distance_group_placement 36
    elseif MAPSIZE_SMALL
        number_of_groups 2
    elseif MAPSIZE_MEDIUM
        number_of_groups 3
    elseif MAPSIZE_NORMAL
        number_of_groups 3
    elseif MAPSIZE_LARGE
        number_of_groups 4
    elseif MAPSIZE_HUGE
        number_of_groups 5
        temp_min_distance_group_placement 60
    elseif MAPSIZE_GIANT
        number_of_groups 6
        temp_min_distance_group_placement 64
    elseif MAPSIZE_MASSIVE
        number_of_groups 7
        temp_min_distance_group_placement 65
    elseif MAPSIZE_ENORMOUS
        number_of_groups 9
        temp_min_distance_group_placement 68
    elseif MAPSIZE_COLOSSAL
        number_of_groups 11
        temp_min_distance_group_placement 70
    elseif MAPSIZE_INCREDIBLE
        number_of_groups 14
        temp_min_distance_group_placement 75
    elseif MAPSIZE_MONSTROUS
        number_of_groups 18
        temp_min_distance_group_placement 80
    elseif MAPSIZE_LUDICROUS
        number_of_groups 26
        temp_min_distance_group_placement 90
    endif
}
create_object STONE {
    temp_min_distance_group_placement 40
    min_distance_group_placement 10
    if AT_MOST_TINY
        avoid_actor_area 30
    else
        avoid_actor_area 44
    endif
    set_tight_grouping
    avoid_forest_zone
    actor_area 100
    actor_area_radius 16
    avoid_actor_area 100
    if AT_MOST_SMALL
        number_of_objects 2
    elseif AT_LEAST_NORMAL
        number_of_objects 4
    else
        number_of_objects 3 /* should be medium map size */
    endif
    if MAPSIZE_MINI
        number_of_groups 2
        temp_min_distance_group_placement 30
    elseif MAPSIZE_TINY
        number_of_groups 2
        temp_min_distance_group_placement 36
    elseif MAPSIZE_SMALL
        number_of_groups 2
    elseif MAPSIZE_MEDIUM
        number_of_groups 3
    elseif MAPSIZE_NORMAL
        number_of_groups 3
    elseif MAPSIZE_LARGE
        number_of_groups 4
    elseif MAPSIZE_HUGE
        number_of_groups 6 /* start of infinite stone groups for standard resources */
        temp_min_distance_group_placement 60
    elseif MAPSIZE_GIANT
        number_of_groups 7
        temp_min_distance_group_placement 64
    elseif MAPSIZE_MASSIVE
        number_of_groups 8
        temp_min_distance_group_placement 65
    elseif MAPSIZE_ENORMOUS
        number_of_groups 10
        temp_min_distance_group_placement 68
    elseif MAPSIZE_COLOSSAL
        number_of_groups 12
        temp_min_distance_group_placement 70
    elseif MAPSIZE_INCREDIBLE
        number_of_groups 16
        temp_min_distance_group_placement 75
    elseif MAPSIZE_MONSTROUS
        number_of_groups 20
        temp_min_distance_group_placement 80
    elseif MAPSIZE_LUDICROUS
        number_of_groups 29
        temp_min_distance_group_placement 90
    endif
}
/*
TODO optional: add some predators. There are several that should work.
create_object FLAG_B {
    set_place_for_every_player
    actor_area_to_place_in 13
    avoid_actor_area 9
    number_of_objects 9320
    temp_min_distance_group_placement 1
}
create_object FLAG_B {
    set_place_for_every_player
    actor_area_to_place_in 24
    avoid_actor_area 100
    number_of_objects 9320
    temp_min_distance_group_placement 1
}

*/
