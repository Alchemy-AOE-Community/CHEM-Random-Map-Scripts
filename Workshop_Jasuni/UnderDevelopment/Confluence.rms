/*
Black Forest: Right now my basic idea for how to make it is use other_zone_avoidance distance to form the river (in a direct placement map with multiple configurations). I'd use neutral lands to create the splits (potentially with smaller other_zone_avoidance distance than the player lands). The neutral lands would need to be placed on/near the edge of the map.

River will be at elevation 0, while the lands may be elevation 1. Hills will generated on the land to create hilly terrain (and as the river is water, will automatically avoid the river).

Forest (and paths within the forest) will be generated by creating several patches of a temporary terrain (likely as a terrain mask) that avoids other terrains by a certain (variable) distance, replacing the temporary terrain with forest terrain, and repeating. I've used this technique in other maps (ex: Syzygy and Forest_Maze, which I have published in a map pack), and it is effective for generating forest while keeping players/areas connected. The potentially tricky part is having the forest go up to the river (which I think I'll be able to do by temporarily changing the water to the base terrain of the lands - I'd change it back by either changing all the land at elevation 0 back to water, or by leaving the water as a top-level terrain mask while it is temporarily a land terrain - the latter option should keep the temporary terrain from placing on the river if applied as a terrain mask, but shouldn't push away the temporary terrain because it is technically the right base terrain)

Some details are not yet decided. I think I can include shallows in the river to create crossings. I'd also want resources in the forest and islands to motivate players to go out of their starting base and out onto the map.

idea for randomization: have 8 locations for each of the lands, and randomly select 3 locations that aren't adjacent for the lands (or some such). Could have the if-else statements contained within the create land statements.

idea: no deer on starting islands, but some on the neutral lands. Have berries scattered throughout the forest (or make theme dependent)

TODO
add hills on the land
*/
<PLAYER_SETUP>
direct_placement
behavior_version 2
if 2_PLAYER_GAME
    #define STANDARD_MAP_GENERATION
elseif 2_TEAM_GAME
    #define STANDARD_MAP_GENERATION
endif

if MAPSIZE_MINI
    /* AT_MOST_MINI can simply use MAPSIZE_MINI */
    #define AT_MOST_TINY
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
    /* and AT_MOST_LUDCROUS is always true */
elseif MAPSIZE_TINY
    #define AT_LEAST_TINY
    
    #define AT_MOST_TINY
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_SMALL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    
    #define AT_MOST_SMALL
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MEDIUM
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    
    #define AT_MOST_MEDIUM
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_NORMAL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    
    #define AT_MOST_NORMAL
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_LARGE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    
    #define AT_MOST_LARGE
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_HUGE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    
    #define AT_MOST_HUGE
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_GIANT
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    
    #define AT_MOST_GIANT
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MASSIVE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    
    #define AT_MOST_MASSIVE
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_ENORMOUS
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    
    #define AT_MOST_ENORMOUS
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_COLOSSAL
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    
    #define AT_MOST_COLOSSAL
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_INCREDIBLE
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    
    #define AT_MOST_INCREDIBLE
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_MONSTROUS
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    #define AT_LEAST_MONSTROUS
    
    #define AT_MOST_MONSTROUS
elseif MAPSIZE_LUDICROUS
    /* AT_LEAST_MINI is always true */
    #define AT_LEAST_TINY
    #define AT_LEAST_SMALL
    #define AT_LEAST_MEDIUM
    #define AT_LEAST_NORMAL
    #define AT_LEAST_LARGE
    #define AT_LEAST_HUGE
    #define AT_LEAST_GIANT
    #define AT_LEAST_MASSIVE
    #define AT_LEAST_ENORMOUS
    #define AT_LEAST_COLOSSAL
    #define AT_LEAST_INCREDIBLE
    #define AT_LEAST_MONSTROUS
    /* and AT_LEAST_LUDCROUS - can simply use MAP_SIZE_LUDICROUS */
endif
if THEME_A
else /* default theme */
    #const BASE_TERRAIN 0 /* GRASS */
    #const SHALLOW_TERRAIN 59 /* DLC_NEWSHALLOW */
    #const FOREST_TERRAIN 10 /* FOREST */
    #const TERRAIN_MASK 5 /* LEAVES */
    /* could add WATER_TERRAIN 1 */

    #const TREE 349 /* OAKTREE */
endif

#const ON_GRID 278 /* dead fish trap */
effect_amount GAIA_SET_ATTRIBUTE ON_GRID ATTR_STORAGE_VALUE 0
<LAND_GENERATION> /* potential issue: one player may start closer to the river than the other */
base_terrain BASE_TERRAIN
create_land {
    terrain_type BASE_TERRAIN
    assign_to_player 1
    zone 1
    /* land_id 1 */
    land_position 20 80
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 45
    clumping_factor 35
}
create_land {
    terrain_type BASE_TERRAIN
    zone 1
    land_position 15 75
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 1
    land_position 25 75
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 1
    land_position 15 85
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 1
    land_position 25 85
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land { /* might be worthwhile to surround this with a square of lands with the same zone, perhaps 5 percentage points away. */
    terrain_type BASE_TERRAIN
    assign_to_player 2
    zone 2
    /* land_id 2 */
    land_position 80 80
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 45
    clumping_factor 35
}
create_land {
    terrain_type BASE_TERRAIN
    zone 2
    land_position 75 75
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 2
    land_position 85 75
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 2
    land_position 75 85
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 2
    land_position 85 85
    base_elevation 1
    other_zone_avoidance_distance 13
    land_percent 0
}
create_land {
    terrain_type BASE_TERRAIN
    zone 11
    land_id 11
    land_position 50 10
    base_elevation 1
    other_zone_avoidance_distance 9
    land_percent 45
    clumping_factor 35
}
/*
create_land {
    terrain_type BASE_TERRAIN
    zone 12
    land_position rnd(20,30) 1
    base_elevation 1
    other_zone_avoidance_distance 7
    land_percent 2
    clumping_factor 35
}
create_land {
    terrain_type BASE_TERRAIN
    zone 13
    land_position rnd(70,80) 1
    base_elevation 1
    other_zone_avoidance_distance 7
    land_percent 2
    clumping_factor 35
}
*/
<ELEVATION_GENERATION>
<TERRAIN_GENERATION>
/*
create_terrain GRASS2 {
    land_percent 100
    number_of_clumps 9320
    base_terrain WATER
    /* terrain_mask 2 under */
}
create_terrain GRASS2 {
    land_percent 100
    number_of_clumps 9320
    base_terrain WATER
    /* terrain_mask 2 under */
}
create_terrain GRASS2 {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    terrain_mask 2
}
create_terrain GRASS2 {
    land_percent 100
    number_of_clumps 9320
    base_terrain DIRT2
     /* terrain_mask 2 */
}
 */
 
 create_terrain TERRAIN_MASK {
    land_percent 5
    number_of_clumps 32
    base_terrain BASE_TERRAIN
    terrain_mask 1
 }
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 1 3
    set_avoid_player_start_areas 15
}
 create_terrain TERRAIN_MASK {
    land_percent 20
    number_of_clumps 60
    base_terrain BASE_TERRAIN
    terrain_mask 1
    spacing_to_other_terrain_types 2
 }
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 1 3
    set_avoid_player_start_areas 15
}
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
/* Fill in some of the river with water to reduce the number of crossings */
create_terrain WATER {
    land_percent 2
    number_of_clumps 32
    base_terrain BASE_TERRAIN
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
create_terrain TERRAIN_MASK {
    land_percent 5
    number_of_clumps 12
    base_terrain BASE_TERRAIN
    terrain_mask 1
    spacing_to_other_terrain_types 3
    set_avoid_player_start_areas 15
 }
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 1 3
    set_avoid_player_start_areas 14
}
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
 create_terrain TERRAIN_MASK {
    land_percent 5
    number_of_clumps 16
    base_terrain BASE_TERRAIN
    terrain_mask 1
    spacing_to_other_terrain_types 4
    set_avoid_player_start_areas 15
 }
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 1 3
    set_avoid_player_start_areas 13
}
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
 create_terrain TERRAIN_MASK {
    land_percent 99
    number_of_clumps 932
    base_terrain BASE_TERRAIN
    terrain_mask 1
    spacing_to_other_terrain_types 5
    set_avoid_player_start_areas 15
 }
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 1 3
    set_avoid_player_start_areas 12
}
/* temporarily create more leaves for the riverbeds, indicating where water should be */
 create_terrain TERRAIN_MASK {
    land_percent 99
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    terrain_mask 1
    spacing_to_other_terrain_types rnd(2,3) /* TODO  */
    height_limits 0 0
 }
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    terrain_mask 2
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
create_terrain WATER {
    land_percent 100
    number_of_clumps 9320
    base_terrain BASE_TERRAIN
    terrain_mask 2
    height_limits 0 0
    set_flat_terrain_only
    spacing_to_other_terrain_types 1
}
create_terrain SHALLOW_TERRAIN {
    land_percent 100
    number_of_clumps 9320
    base_terrain WATER
    base_layer BASE_TERRAIN
    height_limits 0 0
    set_flat_terrain_only
}
create_terrain SHALLOW_TERRAIN {
    land_percent 100
    number_of_clumps 9320
    base_terrain WATER
    base_layer BASE_TERRAIN
    height_limits 0 0
    set_flat_terrain_only
}
/* allow forest to dip down to the river, now that it's fully placed
*/
create_terrain FOREST_TERRAIN {
    land_percent 100
    number_of_clumps 999
    base_terrain BASE_TERRAIN
    base_layer TERRAIN_MASK
    set_avoid_player_start_areas 11
}
create_terrain SHALLOW_TERRAIN {
    land_percent 100
    number_of_clumps 9320
    base_terrain WATER
    base_layer BASE_TERRAIN
    set_flat_terrain_only
}
/* just a little terrain mask for visual effect */
create_terrain TERRAIN_MASK {
    land_percent 15
    number_of_clumps 300
    base_terrain BASE_TERRAIN
    terrain_mask 1
}

<OBJECTS_GENERATION>

create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 5
    actor_area_radius 5
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 6
    actor_area_radius 6
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 7
    actor_area_radius 7
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 9
    actor_area_radius 9
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 13
    actor_area_radius 13
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 16
    actor_area_radius 16
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 20
    actor_area_radius 20
}
create_object ON_GRID {
    set_place_for_every_player
    max_distance_to_players 0
    actor_area 26
    actor_area_radius 26
}
create_object TOWN_CENTER {
    set_place_for_every_player
    max_distance_to_players 0
}
create_object VILLAGER {
    set_place_for_every_player
    min_distance_to_players 6
    max_distance_to_players 6
    temp_min_distance_group_placement 1
}
/* #define REGICIDE */
if REGICIDE 
    create_object KING {
        set_place_for_every_player
        min_distance_to_players 7
        find_closest
    }
    create_object DLC_FORTIFIED_TOWER { /* my preferred choice of tower */
        set_place_for_every_player
        find_closest_to_map_center
        max_distance_to_players 9
        set_circular_placement
    }
else
    create_object SCOUT {
        set_place_for_every_player
        avoid_actor_area 6
        actor_area_to_place_in 9
        avoid_forest_zone 1
        set_circular_placement
        find_closest
    }
endif

/* TODO add standard starting player resources/units/buildings, including king for regicide games.

The standard (DE) starting resources per player are:
1 group of 6 forage bushes at least 10 tiles away
1 group of 7 gold mines at least 10 tiles away
1 group of 4 gold mines at least 18 tiles away
1 group of 4 gold mines at least 21 tiles away
1 group of 5 stone mines at least 12 tiles away
1 group of 4 stone mines at least 16 tiles away
1 group of 4 sheep at around 7 tiles (if cows/water buffalo, use 1 group of 3 instead)
In tournament  maps, 1 or all of these often start under control of the player.
2 groups of 2 sheep at a shared variable min distance (14-24) away (if cows/water buffalo, use 1 group of 3, or 2+1 instead)
2 individual boar at least 16 tiles away
1 group of either 3 or 4 deer at a variable min distance (14-24) away
1 individual predator at least 34 tiles away
2 individual trees at 4-5 tiles away
3 individual trees at 6-8 tiles away

 modify to not use min_distance_to_players - should be done
TODO map breaks on miniature map size
5, 6, 7, 9, 13, 16
 */

create_object FORAGE {
    set_place_for_every_player
    avoid_actor_area 9
    actor_area_to_place_in 13
    avoid_forest_zone 1
    set_circular_placement
    set_gaia_object_only
    number_of_groups 2
    number_of_objects 4
    temp_min_distance_group_placement 13
    min_distance_group_placement 3
    set_tight_grouping
    avoid_forest_zone 1
}
create_object SHEEP {
    set_place_for_every_player
    avoid_actor_area 5
    max_distance_to_players 14
    avoid_forest_zone 1
    set_circular_placement
    set_gaia_object_only
    number_of_groups 4
    number_of_objects 2
    set_loose_grouping
    temp_min_distance_group_placement 3
    min_distance_group_placement 1
    avoid_forest_zone 2
}
create_object GOLD {
    set_place_for_every_player
    avoid_actor_area 13
    actor_area_to_place_in 20
    avoid_forest_zone 1
    set_circular_placement
    set_gaia_object_only
    number_of_groups 2
    number_of_objects 4
    temp_min_distance_group_placement 15
    min_distance_group_placement 3
    set_tight_grouping
    avoid_forest_zone 2
    /* TODO add actor area for stone to avoid */
}
create_object STONE {
    set_place_for_every_player
    avoid_actor_area 13
    actor_area_to_place_in 20
    avoid_forest_zone 1
    set_circular_placement
    set_gaia_object_only
    number_of_groups 2
    number_of_objects 5
    temp_min_distance_group_placement 15
    min_distance_group_placement 3
    set_tight_grouping
    avoid_forest_zone 2

}
create_object BOAR {
    set_place_for_every_player
    avoid_actor_area 13
    max_distance_to_players 21
    avoid_forest_zone 1
    set_circular_placement
    set_gaia_object_only
    number_of_groups 2
    temp_min_distance_group_placement 13
    min_distance_group_placement 1
    set_tight_grouping
    avoid_forest_zone 2
    
}
create_object TREE {
    set_place_for_every_player
    min_distance_to_players 4
    max_distance_to_players 8
    set_circular_placement
    set_gaia_object_only
    number_of_groups 5
    set_loose_grouping

}
/* TODO neutral resources: may want to adjust */
if AT_LEAST_LARGE
    create_object FORAGE {
        set_gaia_object_only
        min_distance_to_players   40
        number_of_objects 4
        number_of_groups 99
        temp_min_distance_group_placement 70
        min_distance_group_placement 2
        set_tight_grouping
        avoid_forest_zone 1
    }
endif
/* 
create_object FLAG_A {
    temp_min_distance_group_placement 1
    avoid_forest_zone 1
    avoid_cliff_zone 1
    set_gaia_object_only
    number_of_objects 9320
    set_circular_placement /* helps guarantee placement, since the corners of the squares aren't blocked off. */
    if MAPSIZE_MINI
        min_distance_to_players 20
    elseif MAPSIZE_TINY
        min_distance_to_players 30
    elseif MAPSIZE_SMALL
        min_distance_to_players 30
    elseif MAPSIZE_MEDIUM
        min_distance_to_players 40
    elseif MAPSIZE_NORMAL    
        min_distance_to_players 40
    else
        min_distance_to_players   44
    endif
}
For relics, placement is very tight in 8-player stress tests for mini/tiny map sizes, but does seem to generate consistently. Generations may be a bit unbalanced (especially if a relic is placed behind a corner base), but is probably as good as I'm going to get. 
*/
create_object SHORE_FISH {
    temp_min_distance_group_placement 6
    number_of_objects 9320
    min_distance_group_placement 3
}
if STANDARD_MAP_GENERATION
    create_object FORAGE {
        resource_delta -125
        second_object RELIC
        set_place_for_every_player
        min_distance_to_players 20
        set_circular_placement
        set_gaia_object_only
        avoid_forest_zone 2
    }
    create_object FORAGE {
        resource_delta -125
        second_object RELIC
        number_of_objects 3
        temp_min_distance_group_placement 20
        set_circular_placement
        avoid_forest_zone 2
        place_on_specific_land_id 11
    }
    create_object STONE {
        number_of_objects 3
        number_of_groups 9320
        temp_min_distance_group_placement rnd(26,38)
        set_circular_placement
        avoid_forest_zone 1
        place_on_specific_land_id 11
        set_tight_grouping
        min_distance_group_placement 6
        max_distance_to_other_zones 2
    }
    if ANTIQUITY_MODE
        create_object OYSTERS {
            number_of_objects 9320
            temp_min_distance_group_placement rnd(5,10)
            max_distance_to_other_zones 1
            min_distance_group_placement 3
        } /* TODO remove
    else 
        create_object OYSTERS {
            number_of_objects 9320
            temp_min_distance_group_placement rnd(5,10)
            max_distance_to_other_zones 1
            min_distance_group_placement 3
        } */
    endif
    create_object SALMON {
        number_of_objects 9320
        if ANTIQUITY_MODE
            temp_min_distance_group_placement 7
        else
            temp_min_distance_group_placement 5
        endif
        max_distance_to_other_zones 2
    }
    create_object GOLD {
        if ANTIQUITY_MODE
            resource_delta -350 /* reduce to match oysters */
        endif
        number_of_groups 9320
        temp_min_distance_group_placement rnd(10,23) /* 20 is a decent amount from an eyeball */
        set_circular_placement
        avoid_forest_zone 1
        place_on_specific_land_id 11
        max_distance_to_other_zones 2
    }
    create_object GOLD {
        if ANTIQUITY_MODE
            resource_delta -350
        endif
        number_of_groups 9320
        temp_min_distance_group_placement rnd(10,23) /* 20 is a decent amount from an eyeball */
        set_gaia_object_only
        set_place_for_every_player
        min_distance_to_players 25
        set_circular_placement
        max_distance_to_other_zones 2
        avoid_forest_zone 1
    }
    
else
    create_object RELIC {
        temp_min_distance_group_placement 40
        avoid_forest_zone 1
        avoid_cliff_zone 1
        set_gaia_object_only
        min_distance_to_players 30
        set_circular_placement
        if MAPSIZE_MINI
            number_of_objects 4
            temp_min_distance_group_placement 30 /* these are about as high as I can get while passing the 8 player stress test */
            min_distance_to_players 20 
        elseif MAPSIZE_TINY
            number_of_objects 5
        elseif MAPSIZE_SMALL
            number_of_objects 5
        elseif MAPSIZE_MEDIUM
            number_of_objects 5
        elseif MAPSIZE_NORMAL
            number_of_objects 7
        elseif MAPSIZE_LARGE
            number_of_objects 8
        elseif MAPSIZE_HUGE
            number_of_objects 20
            temp_min_distance_group_placement 60
        elseif MAPSIZE_GIANT
            number_of_objects 20
            temp_min_distance_group_placement 64
        elseif MAPSIZE_MASSIVE
            number_of_objects 20
            temp_min_distance_group_placement 65
        elseif MAPSIZE_ENORMOUS
            number_of_objects 20
            temp_min_distance_group_placement 68
        elseif MAPSIZE_COLOSSAL
            number_of_objects 20
            temp_min_distance_group_placement 70
        elseif MAPSIZE_INCREDIBLE
            number_of_objects 25
            temp_min_distance_group_placement 75
        elseif MAPSIZE_MONSTROUS
            number_of_objects 25
            temp_min_distance_group_placement 80
        elseif MAPSIZE_LUDICROUS
            number_of_objects 30
            temp_min_distance_group_placement 90
        endif
    }
    create_object GOLD {
        temp_min_distance_group_placement 40
        min_distance_group_placement 10
        set_circular_placement
        if MAPSIZE_MINI
            min_distance_to_players 20
        elseif MAPSIZE_TINY
            min_distance_to_players 26
        elseif MAPSIZE_SMALL
            min_distance_to_players 30
        else
            min_distance_to_players   44
        endif
        set_tight_grouping
        avoid_forest_zone 1
        avoid_cliff_zone 1
        actor_area 100
        actor_area_radius 16
        avoid_actor_area   100
        if AT_MOST_NORMAL
            number_of_objects 3
        else
            number_of_objects 4
        endif
        if MAPSIZE_MINI
            number_of_groups 2
            temp_min_distance_group_placement 30
        elseif MAPSIZE_TINY
            number_of_groups 2
            temp_min_distance_group_placement 36
        elseif MAPSIZE_SMALL
            number_of_groups 2
        elseif MAPSIZE_MEDIUM
            number_of_groups 3
        elseif MAPSIZE_NORMAL
            number_of_groups 3
        elseif MAPSIZE_LARGE
            number_of_groups 4
        elseif MAPSIZE_HUGE
            number_of_groups 5
            temp_min_distance_group_placement 60
        elseif MAPSIZE_GIANT
            number_of_groups 6
            temp_min_distance_group_placement 64
        elseif MAPSIZE_MASSIVE
            number_of_groups 7
            temp_min_distance_group_placement 65
        elseif MAPSIZE_ENORMOUS
            number_of_groups 9
            temp_min_distance_group_placement 68
        elseif MAPSIZE_COLOSSAL
            number_of_groups 11
            temp_min_distance_group_placement 70
        elseif MAPSIZE_INCREDIBLE
            number_of_groups 14
            temp_min_distance_group_placement 75
        elseif MAPSIZE_MONSTROUS
            number_of_groups 18
            temp_min_distance_group_placement 80
        elseif MAPSIZE_LUDICROUS
            number_of_groups 26
            temp_min_distance_group_placement 90
        endif
    }
    create_object STONE {
        temp_min_distance_group_placement 40
        min_distance_group_placement 10
        set_circular_placement
        if MAPSIZE_MINI
            min_distance_to_players 20
        elseif MAPSIZE_TINY
            min_distance_to_players 26
        elseif MAPSIZE_SMALL
            min_distance_to_players 30
        else
            min_distance_to_players   44
        endif
        set_tight_grouping
        avoid_forest_zone 1
        avoid_cliff_zone 1
        actor_area 100
        actor_area_radius 16
        avoid_actor_area   100
        if AT_MOST_SMALL
            number_of_objects 2
        elseif AT_LEAST_NORMAL
            number_of_objects 4
        else
            number_of_objects 3 /* should be medium map size */
        endif
        if MAPSIZE_MINI
            number_of_groups 2
            temp_min_distance_group_placement 30
        elseif MAPSIZE_TINY
            number_of_groups 2
            temp_min_distance_group_placement 36
        elseif MAPSIZE_SMALL
            number_of_groups 2
        elseif MAPSIZE_MEDIUM
            number_of_groups 3
        elseif MAPSIZE_NORMAL
            number_of_groups 3
        elseif MAPSIZE_LARGE
            number_of_groups 4
        elseif MAPSIZE_HUGE
            number_of_groups 6 /* start of infinite stone groups for standard resources */
            temp_min_distance_group_placement 60
        elseif MAPSIZE_GIANT
            number_of_groups 7
            temp_min_distance_group_placement 64
        elseif MAPSIZE_MASSIVE
            number_of_groups 8
            temp_min_distance_group_placement 65
        elseif MAPSIZE_ENORMOUS
            number_of_groups 10
            temp_min_distance_group_placement 68
        elseif MAPSIZE_COLOSSAL
            number_of_groups 12
            temp_min_distance_group_placement 70
        elseif MAPSIZE_INCREDIBLE
            number_of_groups 16
            temp_min_distance_group_placement 75
        elseif MAPSIZE_MONSTROUS
            number_of_groups 20
            temp_min_distance_group_placement 80
        elseif MAPSIZE_LUDICROUS
            number_of_groups 29
            temp_min_distance_group_placement 90
        endif
    }
endif
create_object DEER {
    avoid_actor_area 26
    number_of_groups 932
    number_of_objects rnd(2,4)
    set_loose_grouping
    temp_min_distance_group_placement rnd(20,40)
    avoid_forest_zone 1
    max_distance_to_other_zones 2
    terrain_to_place_on BASE_TERRAIN /* otherwise can place on shallows */
}
create_object TREE { 
    set_scaling_to_map_size
    number_of_objects 30
    min_distance_to_players 10
}

